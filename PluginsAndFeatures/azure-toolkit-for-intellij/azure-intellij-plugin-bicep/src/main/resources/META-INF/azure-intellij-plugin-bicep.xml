<idea-plugin>
    <extensions defaultExtensionNs="com.microsoft.tooling.msservices.intellij.azure">
        <actions implementation="com.microsoft.azure.toolkit.intellij.bicep.BicepActionsContributor"/>
    </extensions>
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Bicep" language="Bicep" extensions="bicep" fieldName="INSTANCE"
                  implementationClass="com.microsoft.azure.toolkit.intellij.bicep.BicepFileType"/>
        <!-- register a preloading activity. You need to init IntellijLanguageClient with your config, see readme -->
        <!-- <preloadingActivity implementation="com.microsoft.azure.toolkit.intellij.bicep.activities.BicepLanguageSupportInitializer" id="com.microsoft.azure.toolkit.intellij.bicep.BallerinaPreloadingActivity"/> -->

        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>
        <editorNotificationProvider implementation="com.microsoft.azure.toolkit.intellij.bicep.BicepEditorNotificationProvider"/>
        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>

        <!-- for displaying the statusbar icon -->
        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"
                                order="first"/>

        <!-- needed for completion -->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="any"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="Azure.LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <externalAnnotator id="Azure.LSPAnnotator" language="Bicep"
                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>

        <!-- needed for Workspace Symbols -->
<!--        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"-->
<!--                               id="Azure.LSPSymbolContributor"/>-->

        <!-- needed for renaming -->
        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="Azure.LSPRenameHandler" order="first"/>
        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="Azure.LSPRenameProcessor" order="first"/>
    </extensions>

    <actions>
        <!-- needed for hover -->
        <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction" text="Show Quick Doc"/>
        <action class="org.wso2.lsp4intellij.actions.LSPGotoDeclarationAction" id="GotoDeclaration" use-shortcut-of="GotoDeclaration"
                overrides="true" text="Go to Declaration or Usages"/>
        <!-- Workaround to fix format action conflicts with other toolkits -->
        <!--        <action class="org.wso2.lsp4intellij.actions.LSPReformatAction" id="ReformatCode" use-shortcut-of="ReformatCode"-->
        <!--                overrides="true" text="Reformat Code" />-->
        <!-- needed for find references -->
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="Azure.LSPFindUsages" text="Find Usages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
        </action>
    </actions>
    <applicationListeners>
        <!-- required for lsp file sync -->
        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>
        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>

    <depends config-file="azure-intellij-plugin-bicep-highlight.xml" optional="true">org.jetbrains.plugins.textmate</depends>
</idea-plugin>
