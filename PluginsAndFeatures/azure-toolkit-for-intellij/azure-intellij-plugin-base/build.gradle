plugins {
    id "org.jetbrains.intellij" version "0.7.2"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "io.freefair.aspectj.post-compile-weaving" version "6.0.0-m2"
}

group 'com.microsoft.azure.toolkit'
apply plugin: 'java'

compileJava {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

intellij {
    pluginName = 'azure-intellij-plugin-base'
    version = intellij_version
    plugins = ['java', 'maven', 'maven-model', 'gradle', dep_plugins]
    downloadSources = Boolean.valueOf(sources)
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    compile.exclude module: 'slf4j-api'
    compile.exclude module: 'log4j'
    compile.exclude module: 'stax-api'
    compile.exclude module: 'groovy-templates'
}

dependencies {
    compile 'com.microsoft.azure:azure-toolkit-auth-lib:0.13.0-SNAPSHOT'
    compile 'com.microsoft.azure:azure-toolkit-ide-common-lib:0.13.0-SNAPSHOT'
    compile 'io.projectreactor:reactor-core:3.4.5'

    compile project(':azure-intellij-plugin-lib')
    compile project(':azure-intellij-plugin-service-explorer')

    def modules = IntellijPluginModules.split(",")
    modules.each { m ->
        compile project(':' + m)
    }

    aspect 'com.microsoft.azure:azure-toolkit-common-lib:0.13.0-SNAPSHOT', {
        exclude group: "com.squareup.okhttp3", module: "okhttp"
        exclude group: "com.squareup.okhttp3", module: "okhttp-urlconnection"
        exclude group: "com.squareup.okhttp3", module: "logging-interceptor"
    }
}


gradle.taskGraph.whenReady { graph ->
    def hasRootRunTask = graph.hasTask(':runIde')

    if (hasRootRunTask) {
        graph.getAllTasks().each { task ->
            // look for *:runIde
            def subRunTask = (task.path =~ /:.+:runIde/)
            if (subRunTask) {
                println "TRACER skipping ${task.path} because ':runIde' was specified"
                task.enabled = false
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.freefair.aspectj.post-compile-weaving'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
    group = 'com.microsoft.azure.toolkit'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    apply plugin: 'org.jetbrains.intellij'
    intellij {
        version = intellij_version
        updateSinceUntilBuild = false
        downloadSources = Boolean.valueOf(sources)
    }

    dependencyManagement {
        imports {
            mavenBom 'com.microsoft.azure:azure-toolkit-libs:0.13.0-SNAPSHOT'
            mavenBom 'com.microsoft.azure:azure-toolkit-ide-libs:0.13.0-SNAPSHOT'
        }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:21.0.1'
        // https://mvnrepository.com/artifact/org.projectlombok/lombok
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'

        compile 'com.microsoft.azure:azure-toolkit-common-lib:0.13.0-SNAPSHOT', {
            exclude group: "com.squareup.okhttp3", module: "okhttp"
            exclude group: "com.squareup.okhttp3", module: "okhttp-urlconnection"
            exclude group: "com.squareup.okhttp3", module: "logging-interceptor"
        }

        aspect 'com.microsoft.azure:azure-toolkit-common-lib:0.13.0-SNAPSHOT', {
            exclude group: "com.squareup.okhttp3", module: "okhttp"
            exclude group: "com.squareup.okhttp3", module: "okhttp-urlconnection"
            exclude group: "com.squareup.okhttp3", module: "logging-interceptor"
        }
    }
}
wrapper() {
    gradleVersion = '6.5'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
